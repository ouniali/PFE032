@startuml
skinparam linetype polyline

class ca.etsmtl.leakageanalysisplugin.services.HttpClientLeakageService {
+ {static} MediaType ANALYZE_MEDIATYPE
- {static} String BASE_URL
- {static} Long TIMEOUT
- OkHttpClient client
+ AnalysisResult analyzeFile(String)
- AnalysisResult executeAnalyzeRequest(String)
- {static} Request buildAnalyzeRequest(String)
- JSONObject getAnalyzeRequestData(Request)
- AnalysisResult toAnalysisResult(String,JSONObject)
}
class ca.etsmtl.leakageanalysisplugin.tasks.AnalyzeTask {
+ {static} String TITLE
- List<String> filePaths
- LeakageService service
- {static} void notifyResults(List<AnalysisResult>)
- {static} void notifyErrors(List<AnalysisResult>,int)
- {static} String getErrorText(Exception)
+ void run(ProgressIndicator)
}
class ca.etsmtl.leakageanalysisplugin.actions.AnalyzeAction {
- {static} void getSupportedFiles(PsiDirectory,List<PsiFile>)
+ {static} boolean isFileSupported(PsiFile)
+ void update(AnActionEvent)
+ ActionUpdateThread getActionUpdateThread()
+ void actionPerformed(AnActionEvent)
}
class ca.etsmtl.leakageanalysisplugin.models.leakage.LeakageInstance {
+ String filePath
+ int line
}
class ca.etsmtl.leakageanalysisplugin.util.FilesUtil {
+ {static} String[] SUPPORTED_EXTS
+ {static} boolean isFileSupported(String)
+ {static} boolean isExtensionSupported(String)
+ {static} String getFileName(String)
}
enum ca.etsmtl.leakageanalysisplugin.models.analysis.AnalysisStatus {
+  SUCCESS
+  FAILED
}
class ca.etsmtl.leakageanalysisplugin.windows.LeakageTypeGUI {
- LeakageType leakageType
# JPanel mainPanel
# JLabel nameAndCountLabel
# JLabel iconLabel
~ JPanel leakageInstancesPanel
- void setupMainPanel()
+ JPanel getMainPanel()
- void setCount(int)
- void setIcon(ImageIcon)
- void addInstance(LeakageInstance)
+ void update(List<LeakageInstance>)
+ void reset()
+ LeakageType getType()
}
class ca.etsmtl.leakageanalysisplugin.notifications.Notifier {
+ {static} void notifyInformation(String,String)
+ {static} void notifyError(String,String)
- {static} void notify(String,String,String,NotificationType)
}
interface ca.etsmtl.leakageanalysisplugin.services.LeakageService {
~ AnalysisResult analyzeFile(String)
~ List<AnalysisResult> analyzeFiles(List<String>)
}
interface ca.etsmtl.leakageanalysisplugin.tasks.AnalyzeTaskListener {
~ Topic<AnalyzeTaskListener> TOPIC
~ void updateResults(List<AnalysisResult>)
}
enum ca.etsmtl.leakageanalysisplugin.windows.AnalysisIcon {
+  EMPTY
+  NOTDETECTED
+  DETECTED
- String filePath
+ String getFilePath()
+ ImageIcon getIcon()
}
class ca.etsmtl.leakageanalysisplugin.models.analysis.AnalysisResult {
- String filePath
- HashMap<LeakageType,List<LeakageInstance>> leakages
- AnalysisStatus status
- List<Exception> errors
+ List<Exception> getErrors()
+ String getFilePath()
+ List<LeakageInstance> getLeakages(LeakageType)
+ AnalysisStatus getStatus()
+ boolean isSuccessful()
+ String toString()
}
class ca.etsmtl.leakageanalysisplugin.windows.ToolWindowFactory {
+ void createToolWindowContent(Project,ToolWindow)
}
class ca.etsmtl.leakageanalysisplugin.windows.LeakageToolWindowContent {
- JPanel contentPanel
- ArrayList<LeakageTypeGUI> leakageTypeContainers
- Project project
- JPanel setupLeakagePanel()
- JPanel setupButtonsPanel()
- void updateResults(List<AnalysisResult>)
- void analyzeSelectedFile()
- void analyzeCurrentFile()
- void reset()
+ JPanel getContentPanel()
}
enum ca.etsmtl.leakageanalysisplugin.models.leakage.LeakageType {
+  OVERLAP
+  PREPROCESSING
+  MULTITEST
- String name
- String key
+ String getName()
+ String getKey()
+ {static} LeakageType getLeakageType(String)
+ String toString()
}

ca.etsmtl.leakageanalysisplugin.models.analysis.AnalysisResult <-- ca.etsmtl.leakageanalysisplugin.services.HttpClientLeakageService
ca.etsmtl.leakageanalysisplugin.models.analysis.AnalysisResult <-- ca.etsmtl.leakageanalysisplugin.services.LeakageService
ca.etsmtl.leakageanalysisplugin.models.analysis.AnalysisResult <-- ca.etsmtl.leakageanalysisplugin.windows.LeakageToolWindowContent
ca.etsmtl.leakageanalysisplugin.models.analysis.AnalysisResult <-- ca.etsmtl.leakageanalysisplugin.tasks.AnalyzeTask
ca.etsmtl.leakageanalysisplugin.models.analysis.AnalysisResult <-- ca.etsmtl.leakageanalysisplugin.tasks.AnalyzeTaskListener

ca.etsmtl.leakageanalysisplugin.models.analysis.AnalysisStatus <-- ca.etsmtl.leakageanalysisplugin.models.analysis.AnalysisResult
ca.etsmtl.leakageanalysisplugin.models.analysis.AnalysisStatus <-- ca.etsmtl.leakageanalysisplugin.tasks.AnalyzeTask

ca.etsmtl.leakageanalysisplugin.models.leakage.LeakageInstance <-- ca.etsmtl.leakageanalysisplugin.windows.LeakageTypeGUI
ca.etsmtl.leakageanalysisplugin.models.leakage.LeakageInstance <-- ca.etsmtl.leakageanalysisplugin.windows.LeakageToolWindowContent
ca.etsmtl.leakageanalysisplugin.models.leakage.LeakageInstance <-- ca.etsmtl.leakageanalysisplugin.services.HttpClientLeakageService
ca.etsmtl.leakageanalysisplugin.models.leakage.LeakageInstance <-- ca.etsmtl.leakageanalysisplugin.models.analysis.AnalysisResult

ca.etsmtl.leakageanalysisplugin.models.leakage.LeakageType <-- ca.etsmtl.leakageanalysisplugin.windows.LeakageToolWindowContent
ca.etsmtl.leakageanalysisplugin.models.leakage.LeakageType <-- ca.etsmtl.leakageanalysisplugin.services.HttpClientLeakageService
ca.etsmtl.leakageanalysisplugin.models.leakage.LeakageType <-- ca.etsmtl.leakageanalysisplugin.windows.LeakageTypeGUI
ca.etsmtl.leakageanalysisplugin.models.leakage.LeakageType <-- ca.etsmtl.leakageanalysisplugin.models.analysis.AnalysisResult

ca.etsmtl.leakageanalysisplugin.notifications.Notifier <-- ca.etsmtl.leakageanalysisplugin.windows.LeakageToolWindowContent
ca.etsmtl.leakageanalysisplugin.notifications.Notifier <-- ca.etsmtl.leakageanalysisplugin.tasks.AnalyzeTask

ca.etsmtl.leakageanalysisplugin.services.LeakageService <-- ca.etsmtl.leakageanalysisplugin.tasks.AnalyzeTask
ca.etsmtl.leakageanalysisplugin.services.LeakageService <|.. ca.etsmtl.leakageanalysisplugin.services.HttpClientLeakageService

ca.etsmtl.leakageanalysisplugin.tasks.AnalyzeTask <-- ca.etsmtl.leakageanalysisplugin.windows.LeakageToolWindowContent
ca.etsmtl.leakageanalysisplugin.tasks.AnalyzeTask <-- ca.etsmtl.leakageanalysisplugin.actions.AnalyzeAction

ca.etsmtl.leakageanalysisplugin.tasks.AnalyzeTaskListener <-- ca.etsmtl.leakageanalysisplugin.windows.LeakageToolWindowContent
ca.etsmtl.leakageanalysisplugin.tasks.AnalyzeTaskListener <|.. ca.etsmtl.leakageanalysisplugin.tasks.AnalyzeTask

ca.etsmtl.leakageanalysisplugin.util.FilesUtil <-- ca.etsmtl.leakageanalysisplugin.actions.AnalyzeAction
ca.etsmtl.leakageanalysisplugin.util.FilesUtil <-- ca.etsmtl.leakageanalysisplugin.windows.LeakageTypeGUI
ca.etsmtl.leakageanalysisplugin.util.FilesUtil <-- ca.etsmtl.leakageanalysisplugin.windows.LeakageToolWindowContent

ca.etsmtl.leakageanalysisplugin.windows.AnalysisIcon <-- ca.etsmtl.leakageanalysisplugin.windows.LeakageTypeGUI

ca.etsmtl.leakageanalysisplugin.windows.LeakageTypeGUI <-- ca.etsmtl.leakageanalysisplugin.windows.LeakageToolWindowContent

ca.etsmtl.leakageanalysisplugin.windows.LeakageToolWindowContent <-- ca.etsmtl.leakageanalysisplugin.windows.ToolWindowFactory


@enduml